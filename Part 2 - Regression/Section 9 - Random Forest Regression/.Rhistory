getwd()
contohArray = c(1,1,2,3,5,8)
ls()
plot(contohArray)
plot(contohArray, type="l")
plot(contohArray, type="h")
plot(contohArray, type="s")
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
require(stats)
plot(cars)
lines(lowess(cars))
plot(sin, -pi, 2*pi)
plot(table(rpois(100,5)), type="h", col="red", lwd=10, main = "rpois(100, lambda=5)")
plot(x <- sort(rnorm(47)), type = "s", main = "plot(x, type = \"s\")")
points(x,cex=.5, col = "dark red")
print(contohArray)
barplot(contohArray, col="darkgreen")
x <- c(7,6,8,5,9,9.5,8.3,7.5)
ls
ls()
y <- c(1.2,1.7,1.5,1.3,1.0,1.4,0.8,1.1)
print(x)
bagus_x <- c(7,8,9,9.5)
bagus_y <- c(1.7,1.3,0.8)
test_x <-(7.5)
test_7 <-(1.1)
test_y <-(1.1)
print(test_x)
print(x)
cls
cls()
print(bagus_x)
ls()
install.packages('devtools')
install.packages('keras')
exit
exit()
#listing program 4.1 latihan produk k-NN dengan R
x <- c(7,6,8,5,9,9.5,8.3,7.5)
y <- c(1.2,1.7,1.5,1.3,1.0,1.4,0.8,1.1)
bagus_x <- c(7,8,9,9.5)
bagus_y <- c(1.2, 1.5, 1.0, 1.4)
test_x <- (7.5)
test_x <- (7.5)
test_y <- (1.1)
merk_bagus <- c('A','C','E','F')
merk_kurang <- c('B','D','G')
merk_test <- c('H')
install.packages('randomForest')
setwd("D:/Rizky's File/Tutorial/Udemy/Data Science/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 10)
# Visualizing the Random Forest Regression results (for high resolution and smoother curve)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour='red')+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))), colour='blue')+
ggtitle('Truth or Bluff (Random Trees Regresion)')+
xlab('Level')+
ylab('Salary')
# Visualizing the Random Forest Regression results (for high resolution and smoother curve)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour='red')+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))), colour='blue')+
ggtitle('Truth or Bluff (Random Trees Regresion)')+
xlab('Level')+
ylab('Salary')
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 500)
# Visualizing the Random Forest Regression results (for high resolution and smoother curve)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot()+
geom_point(aes(x = dataset$Level, y = dataset$Salary), colour='red')+
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))), colour='blue')+
ggtitle('Truth or Bluff (Random Trees Regresion)')+
xlab('Level')+
ylab('Salary')
Y_pred = predict(regressor, data.frame(Level = 6.5))
Y_pred = predict(regressor, data.frame(Level = 6.5))
